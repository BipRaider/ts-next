{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "extends": [
    "next",
    "next/core-web-vitals",
    "plugin:@next/next/recommended",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "prettier",
    "plugin:prettier/recommended",
    "plugin:react-hooks/recommended"
  ],
  "plugins": [
    "@typescript-eslint"
  ],
  "ignorePatterns": [
    "next.config.js",
    "next-env-custom.d.ts",
    "images.d.ts"
  ],
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true,
    "node": true,
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "tsconfigRootDir": "./",
    "project": "./tsconfig.json"
  },
  "settings": {
    "import/core-modules": [
      "redux",
      "react",
      "node",
      "typescript",
      "@reduxjs/toolkit"
    ],
    "import/extensions": [
      ".ts",
      ".tsx"
    ],
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "typescript": {
        "project": [
          "src/tsconfig.json"
        ]
      },
      "node": {
        "extensions": [
          ".ts",
          ".tsx"
        ]
      }
    }
  },
  "rules": {
    //base eslint
    "semi": "off",
    "no-useless-escape": "off",
    "import/prefer-default-export": "off",
    "no-shadow": "off",
    "no-useless-catch": "off",
    "import/no-anonymous-default-export": 0,
    "no-console": 1,
    "prefer-const": [
      1,
      {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true
      }
    ],
    //ts
    "@typescript-eslint/unbound-method": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/no-inferrable-types": 0,
    "typescript-eslint/no-floating-promises": 0,
    "@typescript-eslint/no-unsafe-assignment": 0,
    "@typescript-eslint/interface-name-prefix": 0,
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/semi": 1,
    "@typescript-eslint/no-var-requires": 1,
    "@typescript-eslint/no-unsafe-return": 1,
    "@typescript-eslint/no-unsafe-argument": 1,
    "@typescript-eslint/no-non-null-assertion": 1,
    "@typescript-eslint/prefer-optional-chain": 1,
    "@typescript-eslint/no-unsafe-member-access": 1, // Указываем что бы функций явно что-то возвращали
    "@typescript-eslint/explicit-module-boundary-types": 1,
    "@typescript-eslint/prefer-for-of": 2,
    "@typescript-eslint/prefer-as-const": 2,
    "@typescript-eslint/no-empty-interface": [
      1,
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/no-floating-promises": [
      1,
      {
        "ignoreVoid": true,
        "ignoreIIFE": false
      }
    ],
    "@typescript-eslint/no-empty-function": [
      2,
      {
        "allow": [
          "arrowFunctions"
        ]
      }
    ],
    "@typescript-eslint/restrict-template-expressions": [
      1,
      {
        "allowNumber": true,
        "allowBoolean": true,
        "allowAny": true,
        "allowNullish": true,
        "allowRegExp": true
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      1,
      {
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-misused-promises": [
      2,
      {
        "checksVoidReturn": false,
        "checksConditionals": false
      }
    ],
    //prettire
    "prettier/prettier": [
      1,
      {
        "trailingComma": "all",
        "arrowParens": "avoid",
        "printWidth": 120,
        "useTabs": false,
        "semi": true,
        "singleQuote": true,
        "bracketSpacing": true,
        "jsxBracketSameLine": false,
        "proseWrap": "always",
        "endOfLine": "auto",
        "jsxSingleQuote": true,
        "quoteProps": "as-needed",
        "tabWidth": 2
      },
      {
        "disableLanguages": [
          "js",
          "ts",
          "tsx",
          "jsx",
          "scss",
          "css",
          "less",
          "json"
        ],
        "usePrettierrc": true,
        "fileInfoOptions": {
          "withNodeModules": true
        }
      }
    ]
  }
}
